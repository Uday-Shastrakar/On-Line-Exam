package com.exam.config;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer;
import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityCustomizer;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.exam.service.ipmpl.UserDetailsServiceImpl;
@EnableWebSecurity
@Configuration
@EnableGlobalMethodSecurity(prePostEnabled = true)
public class MySecurityConfig  {
  @Autowired
	private UserDetailsServiceImpl userDetailServiceimpl;
  
  @Bean
  public BCryptPasswordEncoder passwordEncoder() {
	return new BCryptPasswordEncoder();
	  
  }
  protected void configure(AuthenticationManagerBuilder auth)throws Exception{
	  auth.userDetailsService(this.userDetailServiceimpl).passwordEncoder(passwordEncoder());
  }
  
  
  
    @Bean
	public SecurityFilterChain filterChain(HttpSecurity http)throws Exception{
		return null;
	
		
	}
	@Bean
	public WebSecurityCustomizer webSecurityCustomizer() {
		return null;
		
	}
}
